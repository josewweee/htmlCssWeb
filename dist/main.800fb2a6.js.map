{"version":3,"sources":["src/main.js"],"names":["toggleButton","document","querySelector","navOptions","scrollHandler","event","querySelectorAll","forEach","btn","classList","remove","target","id","add","addEventListener","contains","myIntersectionObserver","IntersectionObserver","root","threshold","bannerSection","servicesSection","aboutSection","teamSection","portfolioSection","blogSection","contactSection","sections","i","length","observe","accordionButton","accordionBlock","style","marginTop","maxHeight","scrollHeight","button","index","accordionBlockDi","carouselAditionalMobileSlides","ScreenWidth","window","matchMedia","minWithHandler","width","matches","item","hidden","addListener"],"mappings":";AACA,IAAMA,EAAeC,SAASC,cAAc,kBACtCC,EAAaF,SAASC,cAAc,wBAQ1C,SAASE,EAAcC,GACGJ,SAASK,iBAAiB,sBAClCC,QAAS,SAAAC,GACnBA,EAAIC,UAAUC,OAAO,YAEPT,SAASC,cAA8BG,gBAAAA,OAAAA,EAAM,GAAGM,OAAOC,KAC/DH,UAAUI,IAAI,UAZ5Bb,EAAac,iBAAiB,QAAS,WAChCX,EAAWM,UAAUM,SAAS,QAASZ,EAAWM,UAAUC,OAAO,QACjEP,EAAWM,UAAUI,IAAI,UA8BlC,IAhBA,IAAMG,EAAyB,IAAIC,qBAAqBb,EAAe,CACnEc,KAAMjB,SAASC,cAAc,QAC7BiB,UAAW,KAGTC,EAAgBnB,SAASC,cAAc,gBACvCmB,EAAkBpB,SAASC,cAAc,aACzCoB,EAAerB,SAASC,cAAc,UACtCqB,EAActB,SAASC,cAAc,SACrCsB,EAAmBvB,SAASC,cAAc,cAC1CuB,EAAcxB,SAASC,cAAc,SACrCwB,EAAiBzB,SAASC,cAAc,YAExCyB,EAAW,CAACP,EAAeC,EAAiBC,EAAcC,EAChDC,EAAkBC,EAAaC,GAEvCE,EAAI,EAAGA,EAAID,EAASE,OAAQD,IAChCZ,EAAuBc,QAAQH,EAASC,IAe5C,IAHA,IAAMG,EAAkB9B,SAASK,iBAAiB,wBAG1CsB,EAAAA,SAAAA,GAEJG,EAAgBH,GAAGd,iBAAiB,QAAS,WAErCkB,IAAAA,EAAiBD,EAAgBH,GAAG1B,cAAc,6BACtD8B,EAAeC,MAAMC,UAAY,OACjCF,EAAeC,MAAME,UAAYH,EAAeI,aAAe,KAG/DL,EAAgBxB,QAAS,SAAC8B,EAAQC,GAC3BA,GAAAA,IAAUV,EAAE,CACPW,IAAAA,EAAmBF,EAAOnC,cAAc,6BAC5CqC,EAAiBN,MAAMC,UAAY,IACnCK,EAAiBN,MAAME,UAAY,UAb3CP,EAAI,EAAGA,EAAIG,EAAgBF,OAAQD,IAAnCA,EAAAA,GAwBR,IAAMY,EAAgCvC,SAASK,iBAAiB,+BAC5DmC,EAAcC,OAAOC,WAAW,sBAEpC,SAASC,EAAeC,GAChBA,EAAMC,QACNN,EAA8BjC,QAAS,SAAAwC,GACnCA,EAAKtC,UAAUC,OAAO,iBACtBqC,EAAKC,QAAS,IAGlBR,EAA8BjC,QAAS,SAAAwC,GACnCA,EAAKtC,UAAUI,IAAI,iBACnBkC,EAAKC,QAAS,IAMxBJ,EAAeH,GAEjBA,EAAYQ,YAAYL","file":"main.800fb2a6.js","sourceRoot":"..","sourcesContent":["/* NAV BAR */\nconst toggleButton = document.querySelector('.toggle-button');\nconst navOptions = document.querySelector('.header-list--mobile');\n\ntoggleButton.addEventListener('click', () => {\n    if(navOptions.classList.contains('hide')) navOptions.classList.remove('hide')\n    else navOptions.classList.add('hide')\n})\n\n\nfunction scrollHandler(event){\n    const allNavButtons = document.querySelectorAll('.header-list--item');\n    allNavButtons.forEach( btn => {\n        btn.classList.remove('active')\n    });\n    const navButton = document.querySelector(`#header-list-${event[0].target.id}`);\n    navButton.classList.add('active');\n    \n}\n\nconst myIntersectionObserver = new IntersectionObserver(scrollHandler, {\n    root: document.querySelector('body'),\n    threshold: 0.7\n});\n\nconst bannerSection = document.querySelector('#main-banner');\nconst servicesSection = document.querySelector('#services');\nconst aboutSection = document.querySelector('#about');\nconst teamSection = document.querySelector('#team');\nconst portfolioSection = document.querySelector('#portfolio');\nconst blogSection = document.querySelector('#blog');\nconst contactSection = document.querySelector('#contact');\n\nconst sections = [bannerSection, servicesSection, aboutSection, teamSection,\n                portfolioSection, blogSection, contactSection]\n\nfor(let i = 0; i < sections.length; i++){\n    myIntersectionObserver.observe(sections[i]);\n}\n\n\n/* END NAV BAR */\n/* \n\n\n\n\n*/\n/* QUESTIONS */\nconst accordionButton = document.querySelectorAll('.question-block-item');\n\n//Open and close the accordion ( using 'for' and 'let' to avoid the clousure)\nfor(let i = 0; i < accordionButton.length; i++)\n{\n    accordionButton[i].addEventListener('click', () => {\n        //switch the selected accordion content to scroll down ( margin + increace height)\n        let accordionBlock = accordionButton[i].querySelector('.question-item--accordion');\n        accordionBlock.style.marginTop = '2rem';\n        accordionBlock.style.maxHeight = accordionBlock.scrollHeight + 'px';\n\n        //scroll up ( no margin, no max height) the non selected ones\n        accordionButton.forEach( (button, index) => {\n            if(index !== i){\n                let accordionBlockDi = button.querySelector('.question-item--accordion');\n                accordionBlockDi.style.marginTop = '0';\n                accordionBlockDi.style.maxHeight = '0';\n            }\n        })\n    });\n}\n\n/* END QUESTIONS */\n\n\n/* TESTIMONIAL */\n\nconst carouselAditionalMobileSlides = document.querySelectorAll('.carousel-aditional--mobile');\nvar ScreenWidth = window.matchMedia(\"(min-width: 577px)\")\n //JS media query\nfunction minWithHandler(width) {\n    if (width.matches) {\n        carouselAditionalMobileSlides.forEach( item => {\n            item.classList.remove('carousel-item')\n            item.hidden = true;\n        });\n    } else {\n        carouselAditionalMobileSlides.forEach( item => {\n            item.classList.add('carousel-item')\n            item.hidden = false;\n        });\n    }\n  }\n  \n// Call listener function at run time\n  minWithHandler(ScreenWidth)\n// Attach listener function on state changes\nScreenWidth.addListener(minWithHandler)\n\n/* END TESTIMONIAL */"]}